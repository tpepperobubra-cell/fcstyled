const fs=require('fs'), path=require('path'); const { Configuration, OpenAIApi } = require('openai'); const topicsPath = path.join(process.cwd(),'data','topics.json'); if(!fs.existsSync(topicsPath)){ console.error('topics.json missing'); process.exit(1) } const topics = JSON.parse(fs.readFileSync(topicsPath,'utf8')); const next = topics.filter(t=>!t.done).slice(0,2); if(next.length===0){ console.log('No topics left'); process.exit(0) } const conf = new Configuration({ apiKey: process.env.OPENAI_API_KEY || '' }); const client = new OpenAIApi(conf); async function gen(t){ const title=t.title; const slug=title.toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,''); const prompt=`Write a 700-900 word SEO blog post for Florida homeowners about: "${title}". Include H2 headings, short paragraphs, an actionable checklist, and a final CTA to call for a free claim review. Also output a one-sentence meta description on its own line prefixed with META:`; const resp = await client.createChatCompletion({ model:'gpt-4o-mini', messages:[{role:'user',content:prompt}], max_tokens:1200 }); const content = resp.data.choices[0].message.content; let meta=''; let body=content; const m=content.match(/META:\s*(.*)/i); if(m){ meta=m[1].trim(); body=content.replace(m[0],'').trim() } if(!meta) meta = body.replace(/\n/g,' ').slice(0,150); const md = `---\ntitle: "${title}"\ndate: ${new Date().toISOString()}\nmeta: "${meta.replace(/"/g,'')}"\n---\n\n${body}`; const postsDir = path.join(process.cwd(),'posts'); if(!fs.existsSync(postsDir)) fs.mkdirSync(postsDir); const fname = path.join(postsDir, `${new Date().toISOString().slice(0,10)}-${slug}.md`); fs.writeFileSync(fname, md); console.log('Wrote',fname) } async function run(){ for(const t of next) try{ await gen(t) }catch(e){ console.error(e) } const updated = topics.map(t=> next.find(x=>x.title===t.title) ? {...t,done:true} : t); fs.writeFileSync(topicsPath, JSON.stringify(updated,null,2)); console.log('Updated topics.json') } run().catch(e=>{ console.error(e); process.exit(1) })