import fs from 'fs'; import path from 'path'; import matter from 'gray-matter'; import {remark} from 'remark'; import html from 'remark-html'; export default function Post({content,meta}){ return (<div className='container' style={{padding:'2rem 0'}}><h1>{meta.title}</h1><div dangerouslySetInnerHTML={{__html:content}} /></div>) } export async function getStaticPaths(){ const postsDir=path.join(process.cwd(),'posts'); const files=fs.readdirSync(postsDir); const paths=files.map(f=>({params:{slug:f.replace(/\.mdx?$/,'')}})); return {paths,fallback:false} } export async function getStaticProps({params}){ const postsDir=path.join(process.cwd(),'posts'); const full=path.join(postsDir, params.slug + '.md'); const raw=fs.readFileSync(full,'utf8'); const {data} = matter(raw); const processed = await remark().use(html).process(raw); return {props:{content:processed.toString(),meta:data||{title:params.slug}}} }